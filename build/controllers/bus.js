"use strict";

var express = require('express');

var router = express.Router();

var logger = require('logger').createLogger('./development.log');

var response = require('../helpers/response');

var db = require('../config/db');

var Utils = require('../helpers/utils');

var authCheck = require('../middlewares/auth_check');

router.post('/', authCheck, function (req, res) {
  var _req$body = req.body,
      model = _req$body.model,
      numberPlate = _req$body.numberPlate,
      year = _req$body.year,
      manufacturer = _req$body.manufacturer,
      capacity = _req$body.capacity;
  var data = req.decoded.data;
  console.log(data);

  if (!data.is_admin) {
    res.status(403).json(response.error('Access Denied'));
  }

  var query = {
    text: 'INSERT INTO bus(bus_id,driver_id,model,number_plate,year,manufacturer,capacity,trip_status) VALUES($1,$2,$3,$4,$5,$6,$7,$8) RETURNING *',
    values: [Utils.randomString(200), Utils.randomString(200), model, numberPlate, year, manufacturer, capacity, false]
  };
  db.query(query).then(function (respo) {
    res.status(201).json(response.success(respo.rows[0]));
  })["catch"](function (err) {
    logger.info(err);
    res.status(500).json(response.error('Opps! somthing went wrong'));
  });
});
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2FwcC9jb250cm9sbGVycy9idXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJsb2dnZXIiLCJjcmVhdGVMb2dnZXIiLCJyZXNwb25zZSIsImRiIiwiVXRpbHMiLCJhdXRoQ2hlY2siLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsIm1vZGVsIiwibnVtYmVyUGxhdGUiLCJ5ZWFyIiwibWFudWZhY3R1cmVyIiwiY2FwYWNpdHkiLCJkYXRhIiwiZGVjb2RlZCIsImNvbnNvbGUiLCJsb2ciLCJpc19hZG1pbiIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsInF1ZXJ5IiwidGV4dCIsInZhbHVlcyIsInJhbmRvbVN0cmluZyIsInRoZW4iLCJyZXNwbyIsInN1Y2Nlc3MiLCJyb3dzIiwiZXJyIiwiaW5mbyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLElBQU1DLE1BQU0sR0FBR0gsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkksWUFBbEIsQ0FBK0IsbUJBQS9CLENBQWY7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHTCxPQUFPLENBQUMscUJBQUQsQ0FBeEI7O0FBQ0EsSUFBTU0sRUFBRSxHQUFHTixPQUFPLENBQUMsY0FBRCxDQUFsQjs7QUFDQSxJQUFNTyxLQUFLLEdBQUdQLE9BQU8sQ0FBQyxrQkFBRCxDQUFyQjs7QUFDQSxJQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQywyQkFBRCxDQUF6Qjs7QUFFQUMsTUFBTSxDQUFDUSxJQUFQLENBQVksR0FBWixFQUFpQkQsU0FBakIsRUFBNEIsVUFBQ0UsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFHcENELEdBQUcsQ0FBQ0UsSUFIZ0M7QUFBQSxNQUV0Q0MsS0FGc0MsYUFFdENBLEtBRnNDO0FBQUEsTUFFL0JDLFdBRitCLGFBRS9CQSxXQUYrQjtBQUFBLE1BRWxCQyxJQUZrQixhQUVsQkEsSUFGa0I7QUFBQSxNQUVaQyxZQUZZLGFBRVpBLFlBRlk7QUFBQSxNQUVFQyxRQUZGLGFBRUVBLFFBRkY7QUFBQSxNQUloQ0MsSUFKZ0MsR0FJdkJSLEdBQUcsQ0FBQ1MsT0FKbUIsQ0FJaENELElBSmdDO0FBS3hDRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsSUFBWjs7QUFDQSxNQUFJLENBQUNBLElBQUksQ0FBQ0ksUUFBVixFQUFvQjtBQUNsQlgsSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJuQixRQUFRLENBQUNvQixLQUFULENBQWUsZUFBZixDQUFyQjtBQUNEOztBQUNELE1BQU1DLEtBQUssR0FBRztBQUNaQyxJQUFBQSxJQUFJLEVBQUUseUlBRE07QUFFWkMsSUFBQUEsTUFBTSxFQUFFLENBQUNyQixLQUFLLENBQUNzQixZQUFOLENBQW1CLEdBQW5CLENBQUQsRUFBMEJ0QixLQUFLLENBQUNzQixZQUFOLENBQW1CLEdBQW5CLENBQTFCLEVBQW1EaEIsS0FBbkQsRUFBMERDLFdBQTFELEVBQXVFQyxJQUF2RSxFQUE2RUMsWUFBN0UsRUFBMkZDLFFBQTNGLEVBQXFHLEtBQXJHO0FBRkksR0FBZDtBQUlBWCxFQUFBQSxFQUFFLENBQUNvQixLQUFILENBQVNBLEtBQVQsRUFBZ0JJLElBQWhCLENBQXFCLFVBQUNDLEtBQUQsRUFBVztBQUM5QnBCLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCbkIsUUFBUSxDQUFDMkIsT0FBVCxDQUFpQkQsS0FBSyxDQUFDRSxJQUFOLENBQVcsQ0FBWCxDQUFqQixDQUFyQjtBQUNELEdBRkQsV0FFUyxVQUFDQyxHQUFELEVBQVM7QUFDaEIvQixJQUFBQSxNQUFNLENBQUNnQyxJQUFQLENBQVlELEdBQVo7QUFDQXZCLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCbkIsUUFBUSxDQUFDb0IsS0FBVCxDQUFlLDJCQUFmLENBQXJCO0FBQ0QsR0FMRDtBQU1ELENBbkJEO0FBb0JBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQyxNQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCdsb2dnZXInKS5jcmVhdGVMb2dnZXIoJy4vZGV2ZWxvcG1lbnQubG9nJyk7XG5jb25zdCByZXNwb25zZSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvcmVzcG9uc2UnKTtcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vY29uZmlnL2RiJyk7XG5jb25zdCBVdGlscyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvdXRpbHMnKTtcbmNvbnN0IGF1dGhDaGVjayA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmVzL2F1dGhfY2hlY2snKTtcblxucm91dGVyLnBvc3QoJy8nLCBhdXRoQ2hlY2ssIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7XG4gICAgbW9kZWwsIG51bWJlclBsYXRlLCB5ZWFyLCBtYW51ZmFjdHVyZXIsIGNhcGFjaXR5LFxuICB9ID0gcmVxLmJvZHk7XG4gIGNvbnN0IHsgZGF0YSB9ID0gcmVxLmRlY29kZWQ7XG4gIGNvbnNvbGUubG9nKGRhdGEpO1xuICBpZiAoIWRhdGEuaXNfYWRtaW4pIHtcbiAgICByZXMuc3RhdHVzKDQwMykuanNvbihyZXNwb25zZS5lcnJvcignQWNjZXNzIERlbmllZCcpKTtcbiAgfVxuICBjb25zdCBxdWVyeSA9IHtcbiAgICB0ZXh0OiAnSU5TRVJUIElOVE8gYnVzKGJ1c19pZCxkcml2ZXJfaWQsbW9kZWwsbnVtYmVyX3BsYXRlLHllYXIsbWFudWZhY3R1cmVyLGNhcGFjaXR5LHRyaXBfc3RhdHVzKSBWQUxVRVMoJDEsJDIsJDMsJDQsJDUsJDYsJDcsJDgpIFJFVFVSTklORyAqJyxcbiAgICB2YWx1ZXM6IFtVdGlscy5yYW5kb21TdHJpbmcoMjAwKSwgVXRpbHMucmFuZG9tU3RyaW5nKDIwMCksIG1vZGVsLCBudW1iZXJQbGF0ZSwgeWVhciwgbWFudWZhY3R1cmVyLCBjYXBhY2l0eSwgZmFsc2VdLFxuICB9O1xuICBkYi5xdWVyeShxdWVyeSkudGhlbigocmVzcG8pID0+IHtcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbihyZXNwb25zZS5zdWNjZXNzKHJlc3BvLnJvd3NbMF0pKTtcbiAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgIGxvZ2dlci5pbmZvKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24ocmVzcG9uc2UuZXJyb3IoJ09wcHMhIHNvbXRoaW5nIHdlbnQgd3JvbmcnKSk7XG4gIH0pO1xufSk7XG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==