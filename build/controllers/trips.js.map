{"version":3,"sources":["../../app/controllers/trips.js"],"names":["express","require","logger","createLogger","router","Router","response","db","Utils","authCheck","post","req","res","body","busId","origin","destination","fare","tripDate","departureTime","data","decoded","console","log","is_admin","status","json","error","uniqui","randomString","query","then","busData","rowCount","Boolean","rows","trip_status","err","text","values","userId","trimRight","resp","success","get","patch","tripId","params","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\nconst logger = require('logger').createLogger('./app/development.log');\n\nconst router = express.Router();\nconst response = require('../helpers/response');\nconst db = require('../config/db');\nconst Utils = require('../helpers/utils');\n\nconst authCheck = require('../middlewares/auth_check');\n\nrouter.post('/', authCheck, (req, res) => {\n// new trip\n  const {\n    busId,\n    origin,\n    destination,\n    fare,\n    tripDate,\n    departureTime,\n\n  } = req.body;\n  const { data } = req.decoded;\n  console.log(data);\n\n  if (!data.is_admin) {\n    res.status(401).json(response.error('Access Denied'));\n  }\n\n  const uniqui = Utils.randomString(200);\n\n  db.query(`SELECT * FROM bus WHERE bus_id = '${busId}'`).then((busData) => {\n    if (busData.rowCount <= 0) {\n      res.status(404).json(response.error('Bus not found'));\n    } else if (Boolean(busData.rows[0].trip_status) === true) {\n      res.status(403).json(response.error('Bus has a trip that is active'));\n    }\n  }).catch((err) => {\n    logger.error(err);\n\n    res.status(500).json(response.error('Whoops! Something went wrong'));\n  });\n\n  const query = {\n    text: 'INSERT INTO trips(user_id,bus_id,origin,destination,trip_date,fare,departure_time,trip_id,status) VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING *',\n    values: [data.userId, busId, origin, destination, tripDate, fare, departureTime, uniqui.trimRight(), 'Active'],\n  };\n\n  db.query(query).then((resp) => {\n    db.query(`UPDATE bus SET trip_status = '${true}' WHERE bus_id = '${busId}' RETURNING *`).then(() => {\n      res.status(201).json(response.success(resp.rows[0]));\n    }).catch((err) => {\n      logger.error(err);\n\n      res.status(500).json(response.error('Something went wrong'));\n    });\n  }).catch((err) => {\n    logger.error(err);\n\n    res.status(500).json(response.error('Something went wrong'));\n  });\n}).get('/', (req, res) => {\n  // get all trips available\n  db.query(\"SELECT * FROM trips WHERE status = 'Active' \").then((resp) => {\n    res.status(200).json(response.success(resp.rows));\n  }).catch((err) => {\n    logger.error(err);\n\n    res.status(500).json(response.error('Failed to fetch trips'));\n  });\n}).patch('/:tripId', authCheck, (req, res) => {\n  // cancel a trip\n  const tripId = req.params.tripId;\n  const { data } = req.decoded;\n  if (!data.is_admin) {\n    res.status(401).json(response.error('Access Denied'));\n  }\n\n  db.query(`SELECT * FROM trips WHERE status = 'Active' AND trip_id = '${tripId}' `).then((resp) => {\n    if (resp.rowCount < 0) {\n      res.status(404).json(response.error('Trip Not found'));\n    } else {\n      db.query(`UPDATE trips SET status = 'cancelled' WHERE trip_id = '${tripId}' AND status = 'Active'`).then((busData) => {\n        res.status(200).json(response.success({ message: 'Trip cancelled successfully', busData }));\n      }).catch((err) => {\n        res.status(500).json(response.error({ message: 'Trip failed to cancel' }));\n        logger.error(err);\n      });\n    }\n  }).catch((err) => {\n    logger.error(err);\n\n    res.status(500).json(response.error('Failed to fetch trips'));\n  });\n});\n\nmodule.exports = router;\n"],"file":"trips.js"}