{"version":3,"sources":["../../app/controllers/bus.js"],"names":["express","require","router","Router","logger","createLogger","response","db","Utils","authCheck","post","req","res","body","model","numberPlate","year","manufacturer","capacity","data","decoded","console","log","is_admin","status","json","error","query","text","values","randomString","then","respo","success","rows","err","info","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAGA,IAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAP,CAAkBI,YAAlB,CAA+B,uBAA/B,CAAf;;AAEA,IAAMC,QAAQ,GAAGL,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAMM,EAAE,GAAGN,OAAO,CAAC,cAAD,CAAlB;;AACA,IAAMO,KAAK,GAAGP,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAMQ,SAAS,GAAGR,OAAO,CAAC,2BAAD,CAAzB;;AAGAC,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiBD,SAAjB,EAA4B,UAACE,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAQpCD,GAAG,CAACE,IARgC;AAAA,MAEtCC,KAFsC,aAEtCA,KAFsC;AAAA,MAGtCC,WAHsC,aAGtCA,WAHsC;AAAA,MAItCC,IAJsC,aAItCA,IAJsC;AAAA,MAKtCC,YALsC,aAKtCA,YALsC;AAAA,MAMtCC,QANsC,aAMtCA,QANsC;AAAA,MAShCC,IATgC,GASvBR,GAAG,CAACS,OATmB,CAShCD,IATgC;AAUxCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,MAAI,CAACA,IAAI,CAACI,QAAV,EAAoB;AAClBX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBnB,QAAQ,CAACoB,KAAT,CAAe,eAAf,CAArB;AACD;;AACD,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,yIADM;AAEZC,IAAAA,MAAM,EAAE,CAACrB,KAAK,CAACsB,YAAN,CAAmB,GAAnB,CAAD,EAA0BtB,KAAK,CAACsB,YAAN,CAAmB,GAAnB,CAA1B,EAAmDhB,KAAnD,EAA0DC,WAA1D,EAAuEC,IAAvE,EAA6EC,YAA7E,EAA2FC,QAA3F,EAAqG,KAArG;AAFI,GAAd;AAIAX,EAAAA,EAAE,CAACoB,KAAH,CAASA,KAAT,EAAgBI,IAAhB,CAAqB,UAACC,KAAD,EAAW;AAC9BpB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBnB,QAAQ,CAAC2B,OAAT,CAAiBD,KAAK,CAACE,IAAN,CAAW,CAAX,CAAjB,CAArB;AACD,GAFD,WAES,UAACC,GAAD,EAAS;AAChB/B,IAAAA,MAAM,CAACgC,IAAP,CAAYD,GAAZ;AACD,GAJD;AAKD,CAvBD;AA0BAE,MAAM,CAACC,OAAP,GAAiBpC,MAAjB","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\n\nconst logger = require('logger').createLogger('./app/development.log');\n\nconst response = require('../helpers/response');\n\nconst db = require('../config/db');\nconst Utils = require('../helpers/utils');\n\nconst authCheck = require('../middlewares/auth_check');\n\n\nrouter.post('/', authCheck, (req, res) => {\n  const {\n    model,\n    numberPlate,\n    year,\n    manufacturer,\n    capacity,\n\n  } = req.body;\n  const { data } = req.decoded;\n  console.log(data);\n  if (!data.is_admin) {\n    res.status(403).json(response.error('Access Denied'));\n  }\n  const query = {\n    text: 'INSERT INTO bus(bus_id,driver_id,model,number_plate,year,manufacturer,capacity,trip_status) VALUES($1,$2,$3,$4,$5,$6,$7,$8) RETURNING *',\n    values: [Utils.randomString(200), Utils.randomString(200), model, numberPlate, year, manufacturer, capacity, false],\n  };\n  db.query(query).then((respo) => {\n    res.status(201).json(response.success(respo.rows[0]));\n  }).catch((err) => {\n    logger.info(err);\n  });\n});\n\n\nmodule.exports = router;\n"],"file":"bus.js"}